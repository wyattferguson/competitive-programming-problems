"""
Name: Highly divisible triangular number
Problem URL: https://projecteuler.net/problem=12
Date Completed: 2019 
Description:
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""

from math import sqrt

tri = 1
n = factors = 0
while factors < 500:
    n += tri
    tri += 1

    factors = 1
    # skip even factors for odd numbers
    i = 2 if n % 2 == 1 else 1
    # reduce search space to just up to sqrt of number
    for k in range(1, int(sqrt(n) + 1), i):
        if n % k == 0:
            factors += 1

    # sqrt gives half the factors so double it
    factors *= 2

print(f"{n}:{factors}")
